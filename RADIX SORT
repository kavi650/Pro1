import java.util.Arrays;

public class RadixSort {

    // Function to get the maximum value in the array
    private static int getMax(int[] array) {
        int max = array[0];
        for (int num : array) {
            if (num > max) {
                max = num;
            }
        }
        return max;
    }

    // Function to perform counting sort on a specific digit (place value)
    private static void countingSort(int[] array, int place) {
        int size = array.length;
        int[] output = new int[size];
        int[] count = new int[10]; // Digits 0-9

        // Count occurrences of each digit
        for (int num : array) {
            int digit = (num / place) % 10;
            count[digit]++;
        }

        // Update count[i] to store position of the next digit in output[]
        for (int i = 1; i < 10; i++) {
            count[i] += count[i - 1];
        }

        // Build the output array
        for (int i = size - 1; i >= 0; i--) {
            int digit = (array[i] / place) % 10;
            output[count[digit] - 1] = array[i];
            count[digit]--;
        }

        // Copy sorted values back into original array
        System.arraycopy(output, 0, array, 0, size);
    }

    // Function to implement Radix Sort
    private static void radixSort(int[] array) {
        int max = getMax(array);

        // Apply counting sort to each digit (1s, 10s, 100s, etc.)
        for (int place = 1; max / place > 0; place *= 10) {
            countingSort(array, place);
        }
    }

    // Driver code
    public static void main(String[] args) {
        int[] arr = {170, 45, 75, 90, 802, 24, 2, 66};

        System.out.println("Original array:");
        System.out.println(Arrays.toString(arr));

        radixSort(arr);

        System.out.println("Sorted array:");
        System.out.println(Arrays.toString(arr));
    }
}
